from typing import Any

from typing import overload

def findSectionParameters(Edge, Mesh, Vector) -> list: ...
def loftOnCurve(curve, poly, upVector, MaxSize) -> Any: ...
@overload
def meshFromShape(Shape) -> Any: ...
@overload
def meshFromShape(Shape, LinearDeflection, 
AngularDeflection = ..., 
Relative = ..., Segments = ..., 
GroupColors = ...) -> Any: ...
@overload
def meshFromShape(Shape, MaxLength) -> Any: ...
@overload
def meshFromShape(Shape, MaxArea) -> Any: ...
@overload
def meshFromShape(Shape, LocalLength) -> Any: ...
@overload
def meshFromShape(Shape, Deflection) -> Any: ...
@overload
def meshFromShape(Shape, MinLength, MaxLength) -> Any: ...
@overload
def meshFromShape(Shape, Fineness, SecondOrder = ..., 
Optimize = ..., AllowQuad = ...) -> Any: ...
@overload
def meshFromShape(Shape, GrowthRate = ..., SegPerEdge = ..., 
SegPerRadius = ..., SecondOrder = ..., Optimize = ..., 
AllowQuad = ...) -> Any: ...
def projectPointsOnMesh(*args, **kwargs) -> Any: ...
@overload
def projectShapeOnMesh(Shape, Mesh, float) -> polygon: ...
@overload
def projectShapeOnMesh(Shape, Mesh, float) -> listofpolygons: ...
@overload
def projectShapeOnMesh(Shape, Mesh, Vector) -> listofpolygons: ...
@overload
def projectShapeOnMesh(listofpolygons, Mesh, Vector) -> listofpolygons: ...
def wireFromMesh(*args, **kwargs) -> Any: ...
def wireFromSegment(*args, **kwargs) -> Any: ...
